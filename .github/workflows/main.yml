name: vprofile actions
on: workflow_dispatch
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: vprofileapp
  EKS_CLUSTER: vprofile-eks

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps: 
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Maven Test
        run: mvn test

      - name: Checkstyle
        run: mvn checkstyle:checkstyle

      - name: Setup SonarCloud
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          organization: ${{ secrets.SONAR_ORGANIZATION }}
          projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Scan
        run: |
          sonar-scanner \
           -Dsonar.host.url=${{ secrets.SONAR_URL }} \
           -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
           -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
           -Dsonar.sources=src/ \
           -Dsonar.junit.reportsPath=target/surefire-reports \
           -Dsonar.jacoco.reportPath=target/jacoco.exec \
           -Dsonar.java.checkstyle.reportPath=target/checkstyle-result.xml \
           -Dsonar.java.binaries=target/test-classes/com/visualpathit/account

      - name: SonarCloud Quality Gate Check
        uses: sonarsource/sonarcloud-quality-gate-action@v2
        with:
          projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

